---
title: Installing the FIM Add-on for PCF
owner: Security Engineering
---

<strong><%= modified_date %></strong>

This topic describes how to install File Integrity Monitoring Add-on for PCF (FIM Add-on) on your Pivotal Cloud Foundry (PCF) deployment.

##<a id="prereqs"></a>Prerequisites

<p class="note"><strong>Note</strong>: FIM Add-on for PCF does not work on Windows.</p>

To complete the FIM installation:

* You must be a PCF operator with admin rights. 
See the [Understanding Pivotal Cloud Foundry User Types](https://docs.pivotal.io/pivotalcf/customizing/user-types.html#operator) topic for more information.

* You must have Pivotal Operations Manager (Ops Manager) v1.7 or later.

##<a id="create-mfest"></a>Create the FIM Manifest

The FIM manifest is a YML file that contains runtime configuration information for the FIM Add-on.
Follow the steps below to create the FIM manifest for your deployment:

1. Create a file named `fim.yml`, using the following code as a template.
  <pre>releases:
  \- name: fim
      version: 1.0.0
  addons:
  \- name: fim
      jobs:
      \- name: fim
        release: fim
      properties: {}

##<a id="download-deploy"></a>Download and Deploy the FIM Add-on  

1. Download the FIM Add-on software binary from the [Pivotal Network](https://network.pivotal.io/products/p-fim-addon) to your local machine.

2. Copy the software binary to your Ops Manager VM.
  <pre class="terminal">$ scp -i PATH/TO/PRIVATE/KEY fim-release.tar.gz ubuntu@YOUR-OPS-MANAGER-VM-IP:</pre>

3. Copy the FIM manifest, `fim.yml` file, to your Ops Manager instance.
  <pre class="terminal">$ scp -i PATH/TO/PRIVATE/KEY fim.yml ubuntu@YOUR-OPS-MANAGER-VM-IP:</pre>

4. SSH into Ops Manager.
  <pre class="terminal">$ ssh -i PATH-TO-PRIVATE-KEY ubuntu@YOUR-OPS-MANAGER-VM-IP</pre>

5. On the Ops Manager VM, navigate to the software binary location.
  <pre class="terminal">$ cd PATH-TO-BINARY</pre>

6. On the Ops Manager VM, target your BOSH director instance.
  <pre class="terminal">
  $ bosh target YOUR-OPS-MANAGER-DIRECTOR-IP
  Target set to 'Ops Manager'
  Your username: director
  Enter password: ******************
  Logged in as 'director'
  </pre>

7. Upload your release.
  <pre class="terminal">$ bosh upload release PATH-TO-BINARY/BINARY-NAME.tar</pre>

8. From the command line, confirm that the upload of the FIM
software binary completed. You should see the FIM release.
  <pre class="terminal">$ bosh releases</pre>

9. <a name="update"></a>Update your runtime configuration to include the FIM Add-on.
  <p class="note"><strong>Note</strong>: If you installed other BOSH add-ons, you must merge the FIM manifest into your existing add-on manifest. 
Append the contents of `fim.yml` to your existing add-on YML file.</p>
  * **For Ops Manager 1.10 or earlier:**
    <pre class="terminal">$ bosh update runtime-config PATH/YOUR-ADD-ON-YML.yml</pre>
  * **For Ops Manager 1.11 or later:**
    <pre class="terminal">$ bosh2 -e my-env update-runtime-config --name=fim PATH/YOUR-ADD-ON-YML.yml</pre>

10. Verify your runtime configuration changes match what you specified in the FIM manifest.
  <pre class="terminal">
  $ bosh runtime-config
  Acting as user 'admin' on 'micro'
  releases:
  <span>-</span> name: fim
      version: 1.0.0
  <br>
  addons:
    name: fim
      jobs:
        <span>-</span> name: fim
          release: fim
  ...
  </pre>

11. Navigate to your Installation Dashboard in Ops Manager.

12. Click **Apply Changes**.

##<a id="alerts"></a> Configure Forwarding for FIM Alerts

The fim BOSH release writes all alerts to the syslogs of the VMs in your deployment. You can use syslog forwarding to forward the alerts to a syslog aggregator.

* **Using the Elastic Runtime tile**: Follow the steps to [Configure System Logging](http://docs.pivotal.io/pivotalcf/customizing/cloudform-er-config.html#sys-logging) 
in the Elastic Runtime tile. 
The syslog aggregator that you specify receives all alerts generated on Elastic Runtime VMs, including the FIM alerts.
* **Using the BOSH syslog release**: You can use the syslog BOSH release to forward system logs. 
See the [syslog-release](https://github.com/cloudfoundry/syslog-release) for instructions.

<p class="note"><strong>Note</strong>: When you configure syslog forwarding, ensure enough disk space for the logs. 
Make sure that log rotation is frequent enough. If in doubt, rotate the logs hourly or when they reach a certain size. 
Pivotal recommends forwarding logs to a remote syslog aggregation system.</p>

## <a id="verify"></a>Verify the Installation

1. [BOSH ssh](https://docs.pivotal.io/pivotalcf/customizing/trouble-advanced.html#bosh-ssh) into one of the VMs in your deployment.

1. Run `monit summary`. Look for the following processes in the output:

    <pre class="terminal">The Monit daemon 5.2.4 uptime: 3d 0h 56m
    Process 'fim'                 running</pre>

1. If `monit summary` does not list `fim`, perform the following steps:
  1. Start the FIM processes by running the following commands:
  <pre class="terminal">
  $ monit start fim
  </pre>
  1. Run `monit summary` again. If you do not see the processes mentioned above, check `/var/vcap/sys/log/fim` logs for errors.

1. If `monit summary` does list `fim`, do the following:
  1. Enter the following commands:
    <pre class="terminal">$ touch /bin/hackertool
    $ grep hackertool /var/log/messages</pre>
  1. Look for a message that a new file has been created:
    <pre class="terminal">Sep 22 23:57:07 qvsfgv0qnrk filesnitch[3040]: CEF:0|cloud_foundry|fim|1.0.0|1|file integrity monitoring event|5| fname="/bin/hackertool" hostname="f98968fe-501a-470b-819a-c4a2a7ac45c8" md5="d41d8cd98f00b204e9800998ecf8427e" opname="CREATE" optype=1 sha1="da39a3ee5e6b4b0d3255bfef95601890afd80709" ts=1474588627</pre>

